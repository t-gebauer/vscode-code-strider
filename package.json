{
    "name": "code-strider",
    "displayName": "Code Strider",
    "description": "Structured code navigation and editing",
    "publisher": "t-gebauer",
    "license": "GPL-3.0-or-later",
    "repository": {
        "type": "git",
        "url": "https://github.com/t-gebauer/vscode-code-strider"
    },
    "version": "0.3.0-dev",
    "engines": {
        "vscode": "^1.50.0"
    },
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "onLanguage:bash",
        "onLanguage:c",
        "onLanguage:clojure",
        "onLanguage:css",
        "onLanguage:fennel",
        "onLanguage:go",
        "onLanguage:haskell",
        "onLanguage:html",
        "onLanguage:java",
        "onLanguage:javascript",
        "onLanguage:json",
        "onLanguage:kotlin",
        "onLanguage:lua",
        "onLanguage:markdown",
        "onLanguage:nix",
        "onLanguage:ocaml",
        "onLanguage:php",
        "onLanguage:python",
        "onLanguage:scss",
        "onLanguage:toml",
        "onLanguage:typescript",
        "onLanguage:yaml"
    ],
    "main": "./dist/extension.js",
    "contributes": {
        "commands": [
            {
                "command": "code-strider:toggle-ast-viewer",
                "title": "Code-strider: Toggle AST viewer"
            }
        ],
        "menus": {
            "commandPalette": [
                {
                    "command": "code-strider:toggle-ast-viewer",
                    "when": "code-strider:is-editor-supported"
                }
            ]
        },
        "keybindings": [
            {
                "command": "code-strider:toggle-ast-viewer",
                "key": "alt-s alt-t",
                "when": "code-strider:is-editor-supported"
            },
            {
                "command": "code-strider:show-log",
                "key": "alt-s alt-l",
                "when": "code-strider:is-editor-supported"
            },
            {
                "command": "code-strider:greedy-delete",
                "key": "backspace",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "code-strider:greedy-delete",
                "key": "delete",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "code-strider:raise",
                "key": "alt-s r",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "code-strider:undo-edit",
                "key": "u",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "code-strider:back-to-previous-selection",
                "key": "b",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "••••••••••••••••••••••••••••••••••••••••••••••••••"
            },
            {
                "command": "code-strider:exit-insert-mode",
                "key": "Escape",
                "when": "editorTextFocus && !suggestWidgetVisible && !editorHasMultipleSelections && !breakpointWidgetVisible && !findWidgetVisible && !inSnippetMode && !parameterHintsVisible && !LinkedEditingInputVisible && code-strider:is-editor-supported && code-strider:is-insert-mode"
            },
            {
                "command": "code-strider:insert-before",
                "key": "i",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "code-strider:insert-after",
                "key": "a",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "code-strider:insert-above",
                "key": "shift+o",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "code-strider:insert-below",
                "key": "o",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "code-strider:delete-and-insert",
                "key": "c",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "••••••••••••••••••••••••••••••••••••••••••••••••••"
            },
            {
                "command": "code-strider:tree-move-previous-sibling",
                "key": "alt+k",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "code-strider:tree-move-next-sibling",
                "key": "alt+j",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "code-strider:tree-move-parent",
                "key": "alt+h",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "code-strider:tree-move-first-child",
                "key": "alt+l",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "code-strider:tree-move-last-child",
                "key": "ctrl+alt+l",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "••••••••••••••••••••••••••••••••••••••••••••••••••"
            },
            {
                "command": "code-strider:move-up",
                "key": "k",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "code-strider:move-down",
                "key": "j",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "code-strider:move-left",
                "key": "h",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "code-strider:move-right",
                "key": "l",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "code-strider:move-up",
                "key": "Up",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "code-strider:move-down",
                "key": "Down",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "code-strider:move-left",
                "key": "Left",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "code-strider:move-right",
                "key": "Right",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "~comment": "Follow the flow of the currently selected structure.",
                "command": "code-strider:follow-structure",
                "key": "f",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "code-strider:follow-structure-last",
                "key": "shift+f",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "code-strider:first-child",
                "key": "alt+f",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "code-strider:last-child",
                "key": "shift+alt+f",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "code-strider:move-parent",
                "key": "g",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "••••••••••••••••••••••••••••••••••••••••••••••••••"
            },
            {
                "command": "code-strider:slurp-backward",
                "key": "7",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "code-strider:slurp-forward",
                "key": "8",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "code-strider:barf-backward",
                "key": "shift+7",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "code-strider:barf-forward",
                "key": "shift+8",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "•••language•agnostic•editing••••••••••••••••••••••••"
            },
            {
                "command": "code-strider:transpose-next",
                "key": "shift+n",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "code-strider:transpose-previous",
                "key": "shift+p",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            },
            {
                "command": "code-strider:splice",
                "key": "shift+s",
                "when": "editorTextFocus && code-strider:is-editor-supported && !code-strider:is-insert-mode"
            }
        ],
        "languages": [
            {
                "id": "nix",
                "extensions": [
                    ".nix"
                ],
                "aliases": [
                    "Nix"
                ]
            },
            {
                "id": "fennel",
                "extensions": [
                    ".fnl"
                ],
                "aliases": [
                    "Fennel"
                ]
            },
            {
                "id": "kotlin",
                "extensions": [
                    ".kt"
                ],
                "aliases": [
                    "Kotlin"
                ]
            }
        ]
    },
    "scripts": {
        "prebuild": "rm -rd dist && mkdir dist && cp node_modules/web-tree-sitter/tree-sitter.wasm dist/",
        "build-base": "npm run prebuild && esbuild ./src/extension.ts --bundle --outfile=dist/extension.js --external:vscode --format=cjs --platform=node",
        "build": "npm run build-base -- --sourcemap",
        "watch": "npm run build-base -- --sourcemap --watch",
        "build-prod": "npm run build-base -- --minify",
        "///////////////": "---",
        "compile": "tsc -p ./",
        "test-compile": "tsc -p ./",
        "lint": "eslint src --ext ts",
        "////////////////": "---",
        "pretest": "npm run test-compile && npm run lint",
        "test:unit": "node ./out/test/runUnitTests.js",
        "test:integration": "node ./out/test/runIntegrationTest.js",
        "test": "npm run test:unit && npm run build && npm run test:integration",
        "/////////////////": "---",
        "start": "codium --extensionDevelopmentPath $(pwd)",
        "package": "npm run build-prod && rm -rdf target && mkdir target && vsce ls | xargs cp --parents -t target",
        "package-vsix": "npm run build-prod && vsce package"
    },
    "devDependencies": {
        "@types/chai": "^4.2.14",
        "@types/glob": "^7.1.3",
        "@types/mocha": "^8.0.0",
        "@types/node": "^12.11.7",
        "@types/vscode": "^1.50.0",
        "@typescript-eslint/eslint-plugin": "^4.1.1",
        "@typescript-eslint/parser": "^4.1.1",
        "chai": "^4.2.0",
        "esbuild": "^0.13.6",
        "eslint": "^7.9.0",
        "glob": "^7.1.6",
        "mocha": "^8.1.3",
        "prettier": "^2.2.1",
        "ts-loader": "^8.0.13",
        "typescript": "^4.0.2",
        "vsce": "1.94.0",
        "vscode-test": "^1.4.0"
    },
    "dependencies": {
        "web-tree-sitter": "^0.19.4"
    }
}
